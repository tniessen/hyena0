; This does not work because our symbolic execution engine prefers loop
; conditions being true over loop conditions being false, therefore, it gets
; stuck inside the while loop indefinitely without ever reaching an observation
; point.

(strategy (observations 1))

(define-program unbounded-loop
  (let n int (nondet))
  (let i int 0)
  (while (< i n)
    (set i (+ i 1)))
  (observe))

(define-program max-123
  (let i int (nondet (max 123)))
  (observe))

(find-counterexample
  (forall (traces unbounded-loop)
    (exists (traces max-123)
      (= (trace-value unbounded-loop i) (trace-value max-123 i)))))

(expect (outcome counterexample))
